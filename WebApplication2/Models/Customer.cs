//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;



    public partial class Customer
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Customer()
        {
            this.FlightTickets = new HashSet<FlightTicket>();
            this.Orders = new HashSet<Order>();
        }



        public int customerID { get; set; }

        //first name property
        [Display(Name = "First Name")]
        [Required(ErrorMessage = "Field can't be empty")]
        public string customerFirstName { get; set; }

        //last name property
        [Display(Name = "Last Name ")]
        [Required(ErrorMessage = "Field can't be empty")]
        public string customerLastName { get; set; }

        //age property
        [Display(Name = "Age")]
        public Nullable<int> customerAge { get; set; }

        //phone property
        [Display(Name = "Phone")]
        [Required(ErrorMessage = "Field can't be empty")]
        public string customerPhone { get; set; }

        //address property
        [Display(Name = "Address")]
        [Required(ErrorMessage = "Field can't be empty")]
        public string customerAddress { get; set; }

        //city property
        [Display(Name = "City")]
        public string customreCity { get; set; }

        //email property
        [Display(Name = "Email address")]
        [Required(ErrorMessage = "Field can't be empty")]
        [DataType(DataType.EmailAddress, ErrorMessage = "E-mail is not valid")]
        public string customerEmail { get; set; }

        //image property
        [Display(Name = "add image")]
        public string customerImage { get; set; }

        //active property 
        public Nullable<bool> customerActive { get; set; }

        //user name property
        [Display(Name = "User Name")]
        [Required(ErrorMessage = "Field can't be empty")]
        public string customerUserName { get; set; }

        //user password property
        [Display(Name = "Password")]
        [Required(ErrorMessage = "Field can't be empty")]
        [DataType(DataType.Password, ErrorMessage = " is not valid")]
        public string customerUserPassword { get; set; }

        //confirm password property
        [Display(Name = "confirm Password")]
        [Required(ErrorMessage = "Field can't be empty")]
        [Compare("customerUserPassword")]
        [DataType(DataType.Password, ErrorMessage = " is not valid")]
        public string confirmPassword { get; set; }



        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<FlightTicket> FlightTickets { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Order> Orders { get; set; }
    }
}




